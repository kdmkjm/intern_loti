<?xml version="1.0" encoding="euc-kr" ?>

<!DOCTYPE sqlMap
	PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Opr_Stats">

	<typeAlias alias="opr_Stats" 		type="loti.opr.stats.model.Opr_Stats"/>

	<!--  교육생 현황 통계에서 검색하는 월별로 과정명을 조회 (사이버 제외) -->
	<select id="selectOpr_GetCourseName" parameterClass="java.lang.String" resultClass="opr_Stats">
		<![CDATA[  
		SELECT
            COURSECODE,
            COURSENAME || '(' || TO_NUMBER(SUBSTR(COURSECODE, 11, 2)) || '기 - ' ||  SUBSTR(EDUFROM, 5, 4) || '~' || SUBSTR(EDUTO, 5, 4) || ')'  COURSENAME
      FROM  OPR_LECTURE
     WHERE  EDUFROM LIKE REPLACE(#searchKeyword#, '-', '') || '%'
       AND  CRSTYPE1 NOT LIKE '00003'
  ORDER BY  EDUFROM, EDUTO, COURSENAME
  ]]>
	</select>
	
	
	<!--  소속별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsAssignList" parameterClass="java.lang.String" resultClass="opr_Stats">
		<![CDATA[  
    SELECT 
            COURSECODE,
            MAX(COURSENAME) COURSENAME, 
            1||'전체' gubun, 
            COUNT(*) TOTAL, 
            NVL(SUM(DECODE(CHIEFORGAN,'6430000',1)),0) assignChungBuk,
            NVL(SUM(DECODE(CHIEFORGAN,'5710000',1)),0) assignCheongju,
            NVL(SUM(DECODE(CHIEFORGAN,'4360000',1)),0) assignChongJu,
            NVL(SUM(DECODE(CHIEFORGAN,'4390000',1)),0) assignChungJu,  
            NVL(SUM(DECODE(CHIEFORGAN,'4400000',1)),0) assignJaeChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4410000',1)),0) assignChongWon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4420000',1)),0) assignBoUn,
            NVL(SUM(DECODE(CHIEFORGAN,'4430000',1)),0) assignOkChon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4440000',1)),0) assignYoungDong, 
            NVL(SUM(DECODE(CHIEFORGAN,'4450000',1)),0) assignJinChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4460000',1)),0) assignGoeSan,
            NVL(SUM(DECODE(CHIEFORGAN,'4470000',1)),0) assignUmSung,
            NVL(SUM(DECODE(CHIEFORGAN,'4480000',1)),0) assignDanYang,
            NVL(SUM(DECODE(CHIEFORGAN,'5570000',1)),0) assignJungPyong,
            NVL(SUM(DECODE(CHIEFORGAN,'9999999',1)),0) assignEtc
      FROM
           (SELECT 
                    A.COURSECODE, 
                    B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME, 
                    SUBSTRB(A.BIRTHSEX,7,1), 
                    A.CHIEFORGAN, 
                    A.JUMINNO
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
               AND  A.COURSECODE LIKE #searchCourseCode#
           ) 
  GROUP BY  COURSECODE
 UNION ALL
    SELECT 
            COURSECODE,
            MAX(COURSENAME) COURSENAME,
            2||'남' gubun,
            COUNT(*) "계", 
            NVL(SUM(DECODE(CHIEFORGAN,'6430000',1)),0) assignChungBuk,
            NVL(SUM(DECODE(CHIEFORGAN,'5710000',1)),0) assignCheongju,
            NVL(SUM(DECODE(CHIEFORGAN,'4360000',1)),0) assignChongJu,
            NVL(SUM(DECODE(CHIEFORGAN,'4390000',1)),0) assignChungJu,  
            NVL(SUM(DECODE(CHIEFORGAN,'4400000',1)),0) assignJaeChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4410000',1)),0) assignChongWon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4420000',1)),0) assignBoUn,
            NVL(SUM(DECODE(CHIEFORGAN,'4430000',1)),0) assignOkChon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4440000',1)),0) assignYoungDong, 
            NVL(SUM(DECODE(CHIEFORGAN,'4450000',1)),0) assignJinChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4460000',1)),0) assignGoeSan,
            NVL(SUM(DECODE(CHIEFORGAN,'4470000',1)),0) assignUmSung,
            NVL(SUM(DECODE(CHIEFORGAN,'4480000',1)),0) assignDanYang,
            NVL(SUM(DECODE(CHIEFORGAN,'5570000',1)),0) assignJungPyong,
            NVL(SUM(DECODE(CHIEFORGAN,'9999999',1)),0) assignEtc
      FROM
           (SELECT 
                    A.COURSECODE, 
                    B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME,
                    SUBSTRB(A.BIRTHSEX,7,1), 
                    A.CHIEFORGAN, 
                    A.JUMINNO
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
               AND  A.COURSECODE LIKE #searchCourseCode#
               AND  (SUBSTRB(A.BIRTHSEX,7,1) LIKE '1' OR 
                     SUBSTRB(A.BIRTHSEX,7,1) LIKE '3' OR 
                     LENGTH(A.BIRTHSEX) LIKE '6')
           ) 
  GROUP BY  COURSECODE
  UNION ALL
    SELECT 
            COURSECODE,
            MAX(COURSENAME) COURSENAME,
            3||'여' gubun,
            COUNT(*) "계", 
            NVL(SUM(DECODE(CHIEFORGAN,'6430000',1)),0) assignChungBuk,
            NVL(SUM(DECODE(CHIEFORGAN,'5710000',1)),0) assignCheongju,
            NVL(SUM(DECODE(CHIEFORGAN,'4360000',1)),0) assignChongJu,
            NVL(SUM(DECODE(CHIEFORGAN,'4390000',1)),0) assignChungJu,  
            NVL(SUM(DECODE(CHIEFORGAN,'4400000',1)),0) assignJaeChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4410000',1)),0) assignChongWon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4420000',1)),0) assignBoUn,
            NVL(SUM(DECODE(CHIEFORGAN,'4430000',1)),0) assignOkChon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4440000',1)),0) assignYoungDong, 
            NVL(SUM(DECODE(CHIEFORGAN,'4450000',1)),0) assignJinChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4460000',1)),0) assignGoeSan,
            NVL(SUM(DECODE(CHIEFORGAN,'4470000',1)),0) assignUmSung,
            NVL(SUM(DECODE(CHIEFORGAN,'4480000',1)),0) assignDanYang,
            NVL(SUM(DECODE(CHIEFORGAN,'5570000',1)),0) assignJungPyong,
            NVL(SUM(DECODE(CHIEFORGAN,'9999999',1)),0) assignEtc
      FROM
           (SELECT 
                    A.COURSECODE, 
                    B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME,
                    SUBSTRB(A.BIRTHSEX,7,1), 
                    A.CHIEFORGAN, 
                    A.JUMINNO
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
               AND  A.COURSECODE LIKE #searchCourseCode#
               AND  (SUBSTRB(A.BIRTHSEX,7,1) LIKE '2' OR
                     SUBSTRB(A.BIRTHSEX,7,1) LIKE '4' OR
                     LENGTH(A.BIRTHSEX) LIKE '6')
           ) 
  GROUP BY  COURSECODE
  ORDER BY  gubun
  ]]>
	</select>
	
	<!--  직급별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsRankList" parameterClass="java.lang.String" resultClass="opr_Stats">
		<![CDATA[  
		SELECT 
            COURSECODE, 
            MAX(COURSENAME) COURSENAME, 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(GRADECODE, '014', 1, '023', 1, '013', 1, '022' , 1, '012', 1, '021' , 1, '011', 1, '020' , 1)),0) RANK4GEUBUP,
            NVL(SUM(DECODE(GRADECODE, '015', 1, '024', 1)),0) RANK5GEUB,
            NVL(SUM(DECODE(GRADECODE, '016', 1, '025', 1)),0) RANK6GEUB,
            NVL(SUM(DECODE(GRADECODE, '017', 1, '026', 1)),0) RANK7GEUB,
            NVL(SUM(DECODE(GRADECODE, '018', 1, '027', 1)),0) RANK8GEUB,
            NVL(SUM(DECODE(GRADECODE, '019', 1, '028', 1)),0) RANK9GEUB,
            NVL(SUM(DECODE(GRADECODE, '029', 1)),0) RANK10GEUB,
            NVL(SUM(DECODE(GRADECODE, '030', 1, '031', 1, '032', 1, '033', 1)),0) RANKYEONGUJIDO,
            0 RANKBYEOLJEONG,
            COUNT(*)-NVL(SUM(DECODE(GRADECODE, '011', 1, '012', 1, '013', 1, '014', 1, '015', 1, '016', 1, '017', 1, '018', 1, '019', 1, '020', 1, '021', 1, '022', 1, '023', 1, '024', 1, '025', 1, '026', 1, '027', 1, '028', 1, '029', 1, '030', 1, '031', 1, '032', 1, '033', 1)),0) RANKETC
      FROM
           (SELECT 
                    A.COURSECODE, 
                    B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME, 
                    C.GRADECODE 
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B, CMN_RANKCODE C 
             WHERE  A.COURSECODE = B.COURSECODE 
               AND  A.COURSECODE LIKE #searchCourseCode#
               AND A.RANKCODE=C.RANKCODE(+)
           )
  GROUP BY  COURSECODE
  ORDER BY  2
  ]]>
	</select>
	
	<!--  직렬별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsJobList" parameterClass="java.lang.String" resultClass="opr_Stats">
		<![CDATA[  
		SELECT 
            COURSECODE, 
            MAX(COURSENAME) COURSENAME, 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(JOBNAME,'행정',1,'기업행정',1,'운수',1,'노동',1,'문화',1,'공보',1,'통계',1,'교육행정',1)),0) JOBHAENGJEONG,
            NVL(SUM(DECODE(JOBNAME,'세무',1)),0) JOBSEMU,
            NVL(SUM(DECODE(JOBNAME,'전산',1,'통신',1)),0) JOBJEONGBOTONGSIN,
            NVL(SUM(DECODE(JOBNAME,'사회복지',1)),0) JOBSAHOIBOKJI,
            NVL(SUM(DECODE(JOBNAME,'시설',1,'공업',1)),0) JOBSISEOL,
            NVL(SUM(DECODE(JOBNAME,'환경',1,'녹지',1)),0) JOBHWANKYEONG,
            NVL(SUM(DECODE(JOBNAME,'해양수산',1,'농업',1)),0) JOBNONGSUSAN,
            NVL(SUM(DECODE(JOBNAME,'의무',1,'약무',1,'간호',1,'보건',1,'식품위생',1,'의료기술',1)),0) JOBBOGEONEUIMU,
            NVL(SUM(DECODE(JOBNAME,'기능',1)),0) JOBGINEUNG,
            COUNT(*)-NVL(SUM(DECODE(JOBNAME,'의무',1,'약무',1,'간호',1,'보건',1,'식품위생',1,'의료기술',1,'기능',1,'해양수산',1,'농업',1,'환경',1,'녹지',1,'시설',1,'공업',1,'사회복지',1,'전산',1,'통신',1,'세무',1,'행정',1,'기업행정',1,'운수',1,'노동',1,'문화',1,'공보',1,'통계',1,'교육행정',1)),0) JOBETC
      FROM
           (SELECT 
                    A.COURSECODE, 
                    B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME,
                   (SELECT 
                            DISPLAYNAME 
                      FROM  CMN_RANKCODE C, CMN_JOBCODE D
                     WHERE  C.OCCCODE||C.JOBKIND = D.CODE 
                       AND  C.RANKCODE = A.RANKCODE
                    ) JOBNAME
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
               AND  A.COURSECODE LIKE #searchCourseCode#
           )
  GROUP BY  COURSECODE
  ORDER BY  2
  ]]>
	</select>
	
	<!--  연령별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsAgeList" parameterClass="java.lang.String" resultClass="opr_Stats">
		<![CDATA[  
  SELECT 
            COURSECODE, 
            MAX(COURSENAME) COURSENAME, 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(AGEX, 9, 1, 8, 1, 7, 1)), 0) AGE61UP
		     , NVL(SUM(DECODE(AGEX, 6, 1)), 0) AGE51TO60
		     , NVL(SUM(DECODE(AGEX, 5, 1)), 0) AGE41TO50
		     , NVL(SUM(DECODE(AGEX, 4, 1)), 0) AGE31TO40
		     , NVL(SUM(DECODE(AGEX, 3, 1)), 0) AGE21TO30
		     , NVL(SUM(DECODE(AGEX, 2, 1, 1, 1,0,1)), 0) AGE20DOWN
		     , TO_CHAR(NVL(AVG(AGE2), 0), 'FM9990D9') AGEAVG
      FROM
           (SELECT 
                    COURSECODE, 
                    COURSENAME,
                    TO_NUMBER(AGE1) AGE1,
                    TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(AGE1) AGE2, 
                    (TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(AGE1))/10 AGE3,
                    CEIL((TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(AGE1))/10) AGEX
              FROM 
                   (SELECT 
                            A.COURSECODE, 
                            B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME,  
                            DECODE(SUBSTRB(A.BIRTHSEX,7,1),3,'20',4,'20','19')||SUBSTRB(A.BIRTHSEX,1,2) AGE1
                      FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
                     WHERE  A.COURSECODE = B.COURSECODE 
                       AND  A.COURSECODE LIKE #searchCourseCode#
                   )
          ORDER BY  AGEX
           )
  GROUP BY  COURSECODE
  ORDER BY  2
  ]]>
	</select>
	
	<!-- 근무년수별 교육생 현황통계 조회 -->
	<select id="selectOpr_StatsInidateList" parameterClass="java.lang.String" resultClass="opr_Stats">
	<![CDATA[
	SELECT 
            COURSECODE, 
            MAX(COURSENAME) COURSENAME, 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(INIDATEX,8,1,7,1)),0)    	INIDATE31UP,
            NVL(SUM(DECODE(INIDATEX,6,1)),0)            INIDATE26TO30,
            NVL(SUM(DECODE(INIDATEX,5,1)),0)            INIDATE21TO25,
            NVL(SUM(DECODE(INIDATEX,4,1)),0)            INIDATE16TO20,
            NVL(SUM(DECODE(INIDATEX,3,1)),0)            INIDATE11TO15,
            NVL(SUM(DECODE(INIDATEX,2,1)),0)            INIDATE6TO10,
            NVL(SUM(DECODE(INIDATEX,1,1,0,1)),0)        INIDATE5DOWN,
            TO_CHAR(AVG(INIDATE1),'FM9990D9')    INIDATEAVG,
            NVL(SUM(DECODE(NVL(INIDATE,99),99,1)),0)    INIDATEUNKNOWN
      FROM(
           SELECT 
                    COURSECODE, 
                    COURSENAME,
                    TO_NUMBER(INIDATE) INIDATE,
                    TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(INIDATE) INIDATE1, 
                    (TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(INIDATE))/5 INIDATE2,
                    CEIL((TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(INIDATE))/5) INIDATEX
              FROM 
                   (SELECT 
                            A.COURSECODE, 
                            B.COURSENAME || '(' || TO_NUMBER(SUBSTR(A.COURSECODE, 11, 2)) || '기)' COURSENAME,  
                            SUBSTR(C.INIDATE,0,4) INIDATE
                      FROM  OPR_CRSSTUDENT A, OPR_LECTURE B, OPR_RECSTD C 
                     WHERE  A.COURSECODE = B.COURSECODE 
                       AND  A.COURSECODE = C.COURSECODE(+)
                       AND  A.JUMINNO = C.JUMINNO(+)
                       AND  A.COURSECODE LIKE #searchCourseCode#
                   )
          ORDER BY  INIDATEX
           )
	  GROUP BY  COURSECODE
	  ORDER BY  2
	 ]]> 
	</select>
	
	
	<!--  소속별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsCategoryAssignList" parameterClass="opr_Stats" resultClass="opr_Stats">
	
    SELECT 
            1||'전체' gubun, 
            COUNT(*) TOTAL, 
            NVL(SUM(DECODE(CHIEFORGAN,'6430000',1)),0) assignChungBuk,
            NVL(SUM(DECODE(CHIEFORGAN,'5710000',1)),0) assignCheongju,
            NVL(SUM(DECODE(CHIEFORGAN,'4360000',1)),0) assignChongJu,
            NVL(SUM(DECODE(CHIEFORGAN,'4390000',1)),0) assignChungJu,  
            NVL(SUM(DECODE(CHIEFORGAN,'4400000',1)),0) assignJaeChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4410000',1)),0) assignChongWon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4420000',1)),0) assignBoUn,
            NVL(SUM(DECODE(CHIEFORGAN,'4430000',1)),0) assignOkChon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4440000',1)),0) assignYoungDong, 
            NVL(SUM(DECODE(CHIEFORGAN,'4450000',1)),0) assignJinChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4460000',1)),0) assignGoeSan,
            NVL(SUM(DECODE(CHIEFORGAN,'4470000',1)),0) assignUmSung,
            NVL(SUM(DECODE(CHIEFORGAN,'4480000',1)),0) assignDanYang,
            NVL(SUM(DECODE(CHIEFORGAN,'5570000',1)),0) assignJungPyong,
            NVL(SUM(DECODE(CHIEFORGAN,'9999999',1)),0) assignEtc
      FROM
           (SELECT  
                    SUBSTRB(A.BIRTHSEX,7,1), 
                    A.CHIEFORGAN, 
                    A.JUMINNO
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
             	AND A.ISFINISH = 'Y'
               AND   ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
           ) 
 UNION ALL
    SELECT 
            2||'남' gubun,
            COUNT(*) "계", 
            NVL(SUM(DECODE(CHIEFORGAN,'6430000',1)),0) assignChungBuk,
            NVL(SUM(DECODE(CHIEFORGAN,'5710000',1)),0) assignCheongju,
            NVL(SUM(DECODE(CHIEFORGAN,'4360000',1)),0) assignChongJu,
            NVL(SUM(DECODE(CHIEFORGAN,'4390000',1)),0) assignChungJu,  
            NVL(SUM(DECODE(CHIEFORGAN,'4400000',1)),0) assignJaeChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4410000',1)),0) assignChongWon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4420000',1)),0) assignBoUn,
            NVL(SUM(DECODE(CHIEFORGAN,'4430000',1)),0) assignOkChon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4440000',1)),0) assignYoungDong, 
            NVL(SUM(DECODE(CHIEFORGAN,'4450000',1)),0) assignJinChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4460000',1)),0) assignGoeSan,
            NVL(SUM(DECODE(CHIEFORGAN,'4470000',1)),0) assignUmSung,
            NVL(SUM(DECODE(CHIEFORGAN,'4480000',1)),0) assignDanYang,
            NVL(SUM(DECODE(CHIEFORGAN,'5570000',1)),0) assignJungPyong,
            NVL(SUM(DECODE(CHIEFORGAN,'9999999',1)),0) assignEtc
      FROM
           (SELECT 
                    SUBSTRB(A.BIRTHSEX,7,1), 
                    A.CHIEFORGAN, 
                    A.JUMINNO
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE
             AND A.ISFINISH = 'Y'
             AND  (SUBSTRB(A.BIRTHSEX,7,1) LIKE '1' OR 
                   SUBSTRB(A.BIRTHSEX,7,1) LIKE '3' OR 
                   LENGTH(A.BIRTHSEX) LIKE '6') 
               AND  ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
               
           ) 
  UNION ALL
    SELECT 
            3||'여' gubun,
            COUNT(*) "계", 
            NVL(SUM(DECODE(CHIEFORGAN,'6430000',1)),0) assignChungBuk,
            NVL(SUM(DECODE(CHIEFORGAN,'5710000',1)),0) assignCheongju,
            NVL(SUM(DECODE(CHIEFORGAN,'4360000',1)),0) assignChongJu,
            NVL(SUM(DECODE(CHIEFORGAN,'4390000',1)),0) assignChungJu,  
            NVL(SUM(DECODE(CHIEFORGAN,'4400000',1)),0) assignJaeChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4410000',1)),0) assignChongWon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4420000',1)),0) assignBoUn,
            NVL(SUM(DECODE(CHIEFORGAN,'4430000',1)),0) assignOkChon,  
            NVL(SUM(DECODE(CHIEFORGAN,'4440000',1)),0) assignYoungDong, 
            NVL(SUM(DECODE(CHIEFORGAN,'4450000',1)),0) assignJinChon,
            NVL(SUM(DECODE(CHIEFORGAN,'4460000',1)),0) assignGoeSan,
            NVL(SUM(DECODE(CHIEFORGAN,'4470000',1)),0) assignUmSung,
            NVL(SUM(DECODE(CHIEFORGAN,'4480000',1)),0) assignDanYang,
            NVL(SUM(DECODE(CHIEFORGAN,'5570000',1)),0) assignJungPyong,
            NVL(SUM(DECODE(CHIEFORGAN,'9999999',1)),0) assignEtc
      FROM
           (SELECT 
                    SUBSTRB(A.BIRTHSEX,7,1), 
                    A.CHIEFORGAN, 
                    A.JUMINNO
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
             AND A.ISFINISH = 'Y'
             AND  (SUBSTRB(A.BIRTHSEX,7,1) LIKE '2' OR 
                   SUBSTRB(A.BIRTHSEX,7,1) LIKE '4' OR 
                   LENGTH(A.BIRTHSEX) LIKE '6')
               AND   ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
               
           ) 
  ORDER BY  gubun
	</select>
	
	<!--  직급별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsCategoryRankList" parameterClass="opr_Stats" resultClass="opr_Stats">
		
		SELECT 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(GRADECODE, '014', 1, '023', 1, '013', 1, '022' , 1, '012', 1, '021' , 1, '011', 1, '020' , 1)),0) RANK4GEUBUP,
            NVL(SUM(DECODE(GRADECODE, '015', 1, '024', 1)),0) RANK5GEUB,
            NVL(SUM(DECODE(GRADECODE, '016', 1, '025', 1)),0) RANK6GEUB,
            NVL(SUM(DECODE(GRADECODE, '017', 1, '026', 1)),0) RANK7GEUB,
            NVL(SUM(DECODE(GRADECODE, '018', 1, '027', 1)),0) RANK8GEUB,
            NVL(SUM(DECODE(GRADECODE, '019', 1, '028', 1)),0) RANK9GEUB,
            NVL(SUM(DECODE(GRADECODE, '029', 1)),0) RANK10GEUB,
            NVL(SUM(DECODE(GRADECODE, '030', 1, '031', 1, '032', 1, '033', 1)),0) RANKYEONGUJIDO,
            0 RANKBYEOLJEONG,
            COUNT(*)-NVL(SUM(DECODE(GRADECODE, '011', 1, '012', 1, '013', 1, '014', 1, '015', 1, '016', 1, '017', 1, '018', 1, '019', 1, '020', 1, '021', 1, '022', 1, '023', 1, '024', 1, '025', 1, '026', 1, '027', 1, '028', 1, '029', 1, '030', 1, '031', 1, '032', 1, '033', 1)),0) RANKETC
      FROM
           (SELECT  
                    C.GRADECODE 
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B, CMN_RANKCODE C 
             WHERE  A.COURSECODE = B.COURSECODE 
               AND A.RANKCODE=C.RANKCODE(+)
               AND A.ISFINISH = 'Y'
               AND  ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
           )
  ORDER BY  2
	</select>
	
	<!--  직렬별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsCategoryJobList" parameterClass="opr_Stats" resultClass="opr_Stats">
		 
		SELECT 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(JOBNAME,'행정',1,'기업행정',1,'운수',1,'노동',1,'문화',1,'공보',1,'통계',1,'교육행정',1)),0) JOBHAENGJEONG,
            NVL(SUM(DECODE(JOBNAME,'세무',1)),0) JOBSEMU,
            NVL(SUM(DECODE(JOBNAME,'전산',1,'통신',1)),0) JOBJEONGBOTONGSIN,
            NVL(SUM(DECODE(JOBNAME,'사회복지',1)),0) JOBSAHOIBOKJI,
            NVL(SUM(DECODE(JOBNAME,'시설',1,'공업',1)),0) JOBSISEOL,
            NVL(SUM(DECODE(JOBNAME,'환경',1,'녹지',1)),0) JOBHWANKYEONG,
            NVL(SUM(DECODE(JOBNAME,'해양수산',1,'농업',1)),0) JOBNONGSUSAN,
            NVL(SUM(DECODE(JOBNAME,'의무',1,'약무',1,'간호',1,'보건',1,'식품위생',1,'의료기술',1)),0) JOBBOGEONEUIMU,
            NVL(SUM(DECODE(JOBNAME,'기능',1)),0) JOBGINEUNG,
            COUNT(*)-NVL(SUM(DECODE(JOBNAME,'의무',1,'약무',1,'간호',1,'보건',1,'식품위생',1,'의료기술',1,'기능',1,'해양수산',1,'농업',1,'환경',1,'녹지',1,'시설',1,'공업',1,'사회복지',1,'전산',1,'통신',1,'세무',1,'행정',1,'기업행정',1,'운수',1,'노동',1,'문화',1,'공보',1,'통계',1,'교육행정',1)),0) JOBETC
      FROM
           (SELECT 
                   (SELECT 
                            DISPLAYNAME 
                      FROM  CMN_RANKCODE C, CMN_JOBCODE D
                     WHERE  C.OCCCODE||C.JOBKIND = D.CODE 
                       AND  C.RANKCODE = A.RANKCODE
                    ) JOBNAME
              FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
             WHERE  A.COURSECODE = B.COURSECODE 
             AND A.ISFINISH = 'Y'
               AND   ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
           )
  ORDER BY  2
	</select>
	
	<!--  연령별 교육생 현황 통계를 조회 -->
	<select id="selectOpr_StatsCategoryAgeList" parameterClass="opr_Stats" resultClass="opr_Stats">
		
  SELECT 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(AGEX, 9, 1, 8, 1, 7, 1)), 0) AGE61UP
		     , NVL(SUM(DECODE(AGEX, 6, 1)), 0) AGE51TO60
		     , NVL(SUM(DECODE(AGEX, 5, 1)), 0) AGE41TO50
		     , NVL(SUM(DECODE(AGEX, 4, 1)), 0) AGE31TO40
		     , NVL(SUM(DECODE(AGEX, 3, 1)), 0) AGE21TO30
		     , NVL(SUM(DECODE(AGEX, 2, 1, 1, 1,0,1)), 0) AGE20DOWN
		     , TO_CHAR(NVL(AVG(AGE2), 0), 'FM9990D9') AGEAVG
      FROM 
           (SELECT 
                    TO_NUMBER(AGE1) AGE1,
                    TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(AGE1) AGE2, 
                    (TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(AGE1))/10 AGE3,
                    CEIL((TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(AGE1))/10) AGEX
              FROM 
                   (SELECT  
                            DECODE(SUBSTRB(A.BIRTHSEX,7,1),3,'20',4,'20','19')||SUBSTRB(A.BIRTHSEX,1,2) AGE1
                      FROM  OPR_CRSSTUDENT A, OPR_LECTURE B 
                     WHERE  A.COURSECODE = B.COURSECODE 
                     AND A.ISFINISH = 'Y'
                       AND   ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
                   )
          ORDER BY  AGEX
           )
  ORDER BY  2
	</select>
	
	<!-- 근무년수별 교육생 현황통계 조회 -->
	<select id="selectOpr_StatsCategoryInidateList" parameterClass="opr_Stats" resultClass="opr_Stats">
	
	SELECT 
            COUNT(*) TOTAL,
            NVL(SUM(DECODE(INIDATEX,8,1,7,1)),0)    	INIDATE31UP,
            NVL(SUM(DECODE(INIDATEX,6,1)),0)            INIDATE26TO30,
            NVL(SUM(DECODE(INIDATEX,5,1)),0)            INIDATE21TO25,
            NVL(SUM(DECODE(INIDATEX,4,1)),0)            INIDATE16TO20,
            NVL(SUM(DECODE(INIDATEX,3,1)),0)            INIDATE11TO15,
            NVL(SUM(DECODE(INIDATEX,2,1)),0)            INIDATE6TO10,
            NVL(SUM(DECODE(INIDATEX,1,1,0,1)),0)        INIDATE5DOWN,
            TO_CHAR(AVG(INIDATE1),'FM9990D9')    INIDATEAVG,
            NVL(SUM(DECODE(NVL(INIDATE,99),99,1)),0)    INIDATEUNKNOWN
      FROM(
           SELECT 
                    TO_NUMBER(INIDATE) INIDATE,
                    TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(INIDATE) INIDATE1, 
                    (TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(INIDATE))/5 INIDATE2,
                    CEIL((TO_NUMBER(TO_CHAR(TO_DATE(SYSDATE), 'YYYY'))-TO_NUMBER(INIDATE))/5) INIDATEX
              FROM 
                   (SELECT 
                            SUBSTR(C.INIDATE,0,4) INIDATE
                      FROM  OPR_CRSSTUDENT A, OPR_LECTURE B, OPR_RECSTD C 
                     WHERE  A.COURSECODE = B.COURSECODE 
                       AND  A.COURSECODE = C.COURSECODE(+)
                       AND  A.JUMINNO = C.JUMINNO(+)
                       AND A.ISFINISH = 'Y'
                       AND   ((TO_NUMBER(SUBSTR(B.EDUFROM, 0, 6)) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')))  
                      OR (TO_NUMBER(B.BASEYYMM) BETWEEN TO_NUMBER(REPLACE(#searchFrom#, '-', '')) AND TO_NUMBER(REPLACE(#searchTo#,'-','')) ))
				<isNotEmpty prepend="AND" property="crsType1">
										<!-- 집합교육 검색 처리 -->
										<isEqual property="crsType1" compareValue="00000">
											(B.CRSTYPE1 != '00003' AND B.CRSTYPE1 != '00006')
										</isEqual>
										<isNotEqual property="crsType1" compareValue="00000">
											B.CRSTYPE1 = #crsType1#
										</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType2">
								B.CRSTYPE2 = #crsType2#
				</isNotEmpty>
				<isNotEmpty prepend="AND" property="crsType3">
								B.CRSTYPE3 = #crsType3#
				</isNotEmpty>
                   )
          ORDER BY  INIDATEX
           )
	  ORDER BY  2
	</select>
	
</sqlMap>


